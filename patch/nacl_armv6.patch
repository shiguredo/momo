diff --git a/third_party/boringssl/BUILD.gn b/third_party/boringssl/BUILD.gn
index 051b3ed..4b8eecd 100644
--- a/third_party/boringssl/BUILD.gn
+++ b/third_party/boringssl/BUILD.gn
@@ -89,7 +89,11 @@ if (is_win && !is_msan && current_cpu != "arm64") {
       }
     } else if (current_cpu == "arm") {
       if (is_linux || is_android) {
-        sources += crypto_sources_linux_arm
+        if (arm_version <= 6) {
+          public_configs = [ ":no_asm_config" ]
+        } else {
+          sources += crypto_sources_linux_arm
+        }
       } else if (is_ios) {
         sources += crypto_sources_ios_arm
       } else {
diff --git a/third_party/boringssl/linux-arm/crypto/chacha/chacha-armv4.S b/third_party/boringssl/linux-arm/crypto/chacha/chacha-armv4.S
index 4c17124..a0d7bf7 100644
--- a/third_party/boringssl/linux-arm/crypto/chacha/chacha-armv4.S
+++ b/third_party/boringssl/linux-arm/crypto/chacha/chacha-armv4.S
@@ -28,7 +28,7 @@
 .code	32
 #endif
 
-#if defined(__thumb2__) || defined(__clang__)
+#if defined(__thumb__) || defined(__thumb2__) || defined(__clang__)
 #define ldrhsb	ldrbhs
 #endif
 
diff --git a/third_party/opus/BUILD.gn b/third_party/opus/BUILD.gn
index b54f856..4c7d262 100644
--- a/third_party/opus/BUILD.gn
+++ b/third_party/opus/BUILD.gn
@@ -21,7 +21,7 @@ use_opus_x86_optimization =
 # If OPUS Run Time CPU Detections (RTCD) shall be used.
 # Based on the conditions in celt/arm/armcpu.c:
 # defined(_MSC_VER) || defined(__linux__).
-use_opus_arm_rtcd = current_cpu == "arm" && (is_win || is_android || is_linux)
+use_opus_arm_rtcd = current_cpu == "arm" && arm_version >= 7 && (is_win || is_android || is_linux)
 
 config("opus_config") {
   include_dirs = [ "src/include" ]
diff --git a/third_party/pffft/BUILD.gn b/third_party/pffft/BUILD.gn
index ed20e32..069eec5 100644
--- a/third_party/pffft/BUILD.gn
+++ b/third_party/pffft/BUILD.gn
@@ -2,6 +2,7 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/arm.gni")
 import("//testing/libfuzzer/fuzzer_test.gni")
 import("//testing/test.gni")
 
@@ -12,6 +13,11 @@ config("common_config") {
       "_USE_MATH_DEFINES",
     ]
   }
+
+  # PFFFT doesn't support SIMD on mipsel, so build a scalar version.
+  if ((current_cpu == "arm" && !arm_use_neon) || current_cpu == "mipsel") {
+    defines = [ "PFFFT_SIMD_DISABLE" ]
+  }
 }
 
 static_library("pffft") {
